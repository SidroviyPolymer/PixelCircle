<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>10, 10</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>53, 13</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Диаметр</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAANHQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABzHSURBVHja7V1tZB7bFr6EEkopJYSXEhollBJCCaVuyRVCCKGEEELJFUoopYQSSigh
        lFBCOZRQwqGEEkIIoYQQQgghhBDCS+9Mz8q5c97Ox/5Ye/bae54fz4/r9uy8e2avZ9ZeH8/617//+59/
        AQDQTOAhAAAIAAAAEAAAACAAAABAAAAAgAAAAAABAAAAAqgT/QMPBxLMJJhOcA8vDAAaQACJsfck2Ezw
        M4PrBO8TdOPFAUCkBJAY+P0Ehx3Gn8VB+m/w8gAgMgIgl/+0xPhvkP6bAbxAAIiEANI7foJjBeO/wVmC
        PrxEAAicABJD7krwp4bx3+AQwUEACJ8AlgyM/wZf8SIBIFACoIj/tQUBpBjCywSAMAlg2tL4U8zhZQJA
        mAQwy0AA0zG9lGQ/TxO8S7CSYCyNkeCwArESwKCl8afXh55IDP92go2CYOcgDiwQaxDwqwUBLEVi/Gks
        ZLdkn+20LBqHFoiRAO5VVP8V4VsM7jEZv+r+F3BwgRgLgfqouEfV+I9jqAFI9nArwbYm8c3i8AIxlgI/
        1igFfhSJ679q4Pmk14FRHGAgxmagvgp3+DCWEuBkH5MWsY/zBHdxiIEmtQOnabHbsaTgkrV/oP4BAAEU
        G8ijugRB6k7BpV9vhvqHFRxiIFoCiDkFx0QAyAgAIIBQU3DJet8tjL8NYRQABBBwCi5tYrJohFrGAQZA
        AIGn4AwzAfvQRgRAAJGk4NKrBURQABBAvQQgKgWXrPda4W+m15VeHFwABBBhCi5Z8yVdMfL+XnpduYVD
        CzSpDiCVCF9M8CkNenHl4yWn4CgweBOYvKJOyQkcVqBRBEBfw7wI+XqCO7Gn4ChDgUAf0MhS4EWFTsA+
        hi8tUnAACECY8a9ozAUYsPxbSMEBIABBxv9O0xhPbKPiSMEBIAAZxj9m6I7/sDVKpOAAEIBf47+jqQbE
        npJDCg4AAfgjgDnLlFybozIPKTgABOCHAD4z5OUfxZaCw3wAAARQowcgKB6C+QBAowjghSUBbEKcBADC
        JYCuikNfNRloICLjx3wAoJFpwN4ERwYE8AriJEZ/a4jiCrdhCCAAKUagOxxkJSLXvxZxkuTfP+vwMtqk
        wNyCQYAAOA5yquD7J7n0XxIMa/73A4rDQT7EEhWvS5wk+XdTJbUO6TpPYRQgAJvI9VbB4VrXcTXTr1HJ
        Xfg6Fre/TnGS9JkpehRzFvGLKZJxf2LxLIbpw7FLH5JpGKpwAqCXv6/QRNOjsWbas/+x44u16Tvgx52b
        r0OcJI0VuIwtJP/+DRVOZdfY1XlX9AFZL/g9W4hVCCUACt6pRq6PdOvpKWD12HcTjqvcvGtxkuT/Gylx
        +8s8gUnFd7NWkaGZ9vEBAWogAKrh3zdop70TmIvuNDfvSpyEyOXUIr3aV/Kbu3PGt5kQlM4H5DiWuZCx
        EMC64eH6FkoAr47cvCtxEsUuxzKslXhDuqQ1z/QBiWYydNAEQMEam8M1HYDx15mbZxcnsSiu+vt6U2D8
        24brzXQUf30zXOfCJtAI8BDAH5aHawu5ebfiJBqeS6EGQs4Xe9vyujKaSRfb/LY06DgCI/ZHALaH6wC5
        ebfiJKSmbPOOXncY/y5DwPKaMilbTGtNwpD9EIDtC/zc9Ny8a3ESqqw0jS2c3pAYo/FnXfhLxvVmYcz1
        E8CM5UsbFmz83geHcImTWHgyIxnj32E0Vld4Y5vmBQHod/CZBnHWhX/9xQwO4RAnMSgEeskQ8POBZc3n
        0k1FTOeZOpWlJtUboA6g5ty8x/0sKP7u+QzxfAvI+G/wSSXFTOndnZLrzxAIQL0S8FijkCMIZd0YB4dQ
        5F2pGciixkMCNsriJNRrcqQQYJwBAaiTgEopZ1Cy2jEODkl+2/OOw9+m+EKrIwj5M3CsFuz/nmYG6w0I
        QP06wNINGKDrHNTgkDJBEGrHvo6AAH4rNrPIZrwGAagHBqfp7mikByDUYBozOCTQe3+ZGz+Y2duGtGnQ
        UAQS3q7LnZsPIO7xMzJsZs6FyJHwIADB7boucvOCn+G8AIO9tPxS52U20nTfMtN6r0AADZfSzubmYxre
        QdoBEgjgFnMWoock5H6CBCIjAF9S2rEO79AYz56HdzSx2SqFl/ktHEZ7RGtNMBPVPAigQe26Pj2Omp9p
        l+HX92Umi3Bh4a4/ypEbszHUmcxZOQAJxEUAtbbr+vQ4PBDrV5M+f/rvB3M0AlUwyVTKnNuPkfzvBxbk
        xN70BQIIrF3Xl8fhI/NBgbMthTTbi5KCo2uuCDu58Drrfcl7Din5O4hbzIEAGtCu68Pj8BmHoPXL6uWf
        VPz3o4qewBsNojtnKAV+7YAEXoIAIm7X9SUQ4jsOQdVzezmS3y3F//5JiTCp9m+kOv69kn1/VGwGeuuA
        BGZBAJG26/oUCPEdh6D6+U8kAzdlSCKrHd5A+jyfWVxPVjvu85e66bnk3y82nQRCvgLU1q4rQSBEehxC
        4zmmMx4eMMc/nltIsL1zQAIzIICI2nWFCYT4yHw8pCBcr+VvT9338XQ9V81Mhnvbc92IBAIIvF1XgkBI
        3XEI0hTszATs6Q4RJZe9c8zbsWEgNm+68Vfd6cYFe2scCXit3Q+pXVeCQEidcQhy1U+rlIMUvacyTcF1
        VULmmm5csTduTIEAHGuw1dWu61MgpM44BN2rVVR71yvSbb2K1Xd7Ve+Ga7qxxt4aQQJ11+w702Crq13X
        l0BIXXEIgyo+LuWdvSKi5JpubFGhGC0J1GX8tWiw1dWu60sgxHUcgkplzxiUd7oNpcTXC7wuk+nGI0x7
        42xLnmocAZAbeKTxoF4x/M1b/Y51+XwIhLiMQ1ATkOm0p07lnVWOOAXjYBObvXGTwIvGEAB9Cfb7mZpC
        hKYiaxUIcRWHoAAbh/JOy+CL3Tk16DattcYx2oxhb9GSgGsD+WDxRRkKKB3p3ONwHYew/GpnlXfGGIzk
        Of0mluGmDHtzQQKTURNAet+0/BJsNWU6i4Q4BFNZbA9V5dmuM0a/iWW8OdPePjsggYmYCWCB4SHdhbHX
        E4dgEAQ9ylz7LiwNo8XUtfeJeW+rsZGAVGkpEICHOISlGOdMZp05joEelPo8tbhG9jnY20cHJDAeIwHM
        cbhvQH1xCOraM5HNWslZy0RWbKdzDxYCHpMO9xYNCbju/Dq3eCgvajAar4q+EhWFDWSzipR3ujWbbAqD
        lQajymZd7o0pQ5HnsYzHlgUYNQwEroY+QyBkRWFquLlUDIxVlQIfKqYpWwwxpcoeBa69OSSBsdgKgXTL
        OLddTtnxregbiqIwlc2eMTQD3WNsBqqabvys5r11hU4CdR0mVWnnI5fz9Xwr+oamKEyVeN8Z2oFv59yb
        TduB86Ybbxq2A3PsrYvUkrhJYDQaAsh4Au2KZpAex0Eyb0o6gSv5DDAJgtwXKAhivbeQSaDugzRWcP96
        X0PtvldFX2mKwhFkPDgVgbjI7YcDEhiJShCE7oRzZBBvOJRypCv6epph0Eel2Lt0B1+Ioa7CsSIQl9pR
        MCTQlC+GV0Xfuv8+udl5XXQnN3X2gb7HOhSBONWOOEngOQjAIHfuW9G37r9fUR4c7BALD4pAXGpHokkg
        pANglDv3rehb599XNJLgRlx7VATiUjviwpXuFSUKArDNnftW9K3j76eVkxKrLZniNz4VgbjUjrhwphvv
        CJoAOHLnvhV9Xf99imRfG5LLiOB3L0ERiFPtiAt7XFmzENI920zunzdFX9d/31Lf/tBl5aXlM5OiCMSl
        dsSJj00gANbcuS9FX8dKPg8YDtMToe9fiiIQp9oRZwdhT7QE4Cp37kvR16GSzzjDYZoUegYkKQJxqR0d
        MZLAaMwE4Cx37kPR16GSzxOGg/RA6BmQpgjEoXbUR4VLHAQwFiUB1JE796Ho6+LvU5zExlXeEvwRkKgI
        ZK12RO/MlgQuOSo7YyaABQ0D6vYc6LRV8hkxDE5d2zbm1PB8JCoCWasd0XvftDjfr6IOAkqYxhtgmWyU
        c+ylKQJxqR1ZkMAK17OVLnbpdRpvgCSw0F9DdaPgvdWmCMSldkRkokMCG5zScSFUgXnL3QcsFe60ucnj
        3qQpArGoHWmQAHuAOravGnvuPlBDmSjwns5C1xcQqAjEonZE14E1V4NzQ+8F8Jq7D9RQ+uiLsUtIn+Ed
        CIKIVzuayhDcGXkRjxuvB+A7dw8AdXe/RqUJKCl3LvyrHZ2Kj+DnfY9ajVfJQ2pZeCQT9O7ehTTYtrFT
        cHwLlTRFxUd4fcGFrT4lkXZeNmDT5FpBAcH39BFIz9IACCBCoZImqPgIfmczFc97V6XRhrIJ5xU9KYOa
        Z+lbXt7f1QcPB8KjUEnMKj6BS4vdEHhvyTrDiupC6b8ZZtAX3HER5MahMHTjmYRKolTxEfx+RwxqSu7k
        rNPSVBe6qJCt66G/pSJy8gQE4NmN5xAqiVXFR/A7fmDYyddZw69bBpytwegrIJNDzf6NcRCARzeeQ6gk
        VhUfoe+4y1LB921mLZvR4N9zSOnE8CxNgAA86A1yCJXErOIj9D3biqacE4n0MEiCDWQ8wDPLhrfJxhOA
        afrN1I3nECqJWcVH6Bn5wPC8ey1ak7OYoN+0wiQLNtlIArBNv1m48dZCJTGr+Ag9K8sMevxdTJqAT5jU
        jliuA41Mv1m68dZCJTGr+Aj2Em3e2VomVXdpGbvpylQhXjKSwHgjCIAp/fbDk/H/LVQSs4qP0HNjKgl2
        kS0R1qzbKNXwo4Ikr0NEQywBtk2/3fX49V9uioqPwLNzxzB9N5Gzlsn9/UPB71phJoHnMRMAR/qNgwBM
        5MpyhUpiVvER2vxzaPu8KR6g41EUqvjQWt+Y5wcORkcAnHMCOPQGOYVKYlbxEXiOWgra/JUCHJwqPuSd
        7DKSwJlqkDikF8c2J4BLb5BTqCRmFR+BZ6m3xOBOVdt5OVV8yDPdZySBQ5WUeCgvjH1OAJfeIPOQj2hV
        fASeqW6aGHSRmdizZDJui0vFh64onAHqKRBAyX2Oy42PXaikCQFCKSo+zCnqjzFdAZzMCWB2462ESqAI
        5OVcPWTSBGzZagJSodE1IwG8i4kAnM0JkKA3CEUgL/JrWwyqwN3UINS2VAWedjB6fCgaAuC8t0tz46EI
        VPs5elwyc1BnLkCViIfqXIB5BzUnX2KtBHQ6J6BuvUEoAtV+foYVS3DXFSYDqbQY71UoC71yYPwHqnGN
        UF9iFHMCoAgkXhTks+PZgBMOjP9Cp1Es5Jfp7N5uq/CrEXyCIlC9pcCSpgO3DBWKqqoAn+k8l9BfKuu9
        nUPhV+NvQREojGagf/RfkJ6D6TqrmXXWmI3/3GQeQSwv1/rezqHwq+mKQhGo3g+FzbM+yrj+F5bp6BbV
        /18xGv+p6fyAxigAuW4xrlmiCopAes97keF599BgUtt1xiiAyFny2zJ9No0awOGqxdjgb0IRSH4XaeeX
        u5tJEeg5eQDnTASwpTJ3IPRSYGfuOUeLsSHpQBGovvMzZWlkm5nAXdsyQn+b1nrLHANYNylFboQCUB0t
        xoZDKqAIVF+MyJRwr7MepqUs+FxHKnGHmQT2dZuZolcAqqvFuMYvExSBzAOvZ7bP28Jw12toAb7pauyN
        hQCcuecuWoxrqGyEIpDdsx7UjL5/ZFIW2ivKUlFA8MiBJxB2JaBr99xVi7FFURMUgeo5V88US4E/V5QC
        q4702q/6ItM1d4+ZBL4FLQhSh3vuqsXYcL9QBKrXEzhjaAa6x9EMlMlyfWUmgekgCaAu99xli7FFiyoU
        geprB/7O0A58OycweGzqsVGdC5c3sNVkAlhweNXY76+xYxBwetYGmARB7tsKgjhoDT4I+QpQm3uuGWws
        6uxiq1DkbEmO2YOQJOXFsU7y379nvgJ8DpkAnLvn1NhxrLHuby3GnBWKJFTxvaO5adLg2fVSs8l1Zo7B
        QgxeC9feKJ33JlORZyMKOpkJCN6Igg5p/PddlvUFRRgOlgBcuuf08nVbOn9rMeasUKxob95ULToiwYvT
        EqGIgYCNn2Vv9N52HMuCp1hSXGPDgfGvx1IJyKoARF8Q1SBLYYsxZ4WiosDJflXTB11DrhTKUYcDNH6W
        vTEOBlE13D8q0omrDow//DoAFwpABgUc6fWgz2WFoqYkVJk0+VONIpcrk95x4cZfuTeDoptXJS679Wgw
        EgLlNv7jaCoBORWALEo4Tzsju1wVioaSULud7E7qQrp96hchXAe49kbv36TsdjLnN63YpqWpFuGa2fh/
        6GYzGqMAZOlqpYGdR5wVipaSUBsd3ohp3viEKwLusBeEZW80b8G0GWiIScdvPrPOJrPx75g0pzVCAYih
        jfPmqzLEVaHIIAn11EJYNIvFyERTf9sb5ejbtgU15PrbtHFfkjbhLeYZAN9MibwpxR5jTA/6kmGNFSZJ
        qGUGbcFfASPB741lb5qB5CLcZRJyGaMAMpv+v40+ZOyGf5seuAvtdeMKRSZJqA+0x0PLdfYEvz+WvRne
        2fMIgEPGe5R+E0cH4ImtNmSsht+iO1ZbkOH/XaHIJAk1QXv9YrnOquD3yLI3SyXfX9mXTNmw7ftv0Voz
        jOdq07SUOUbjf8qot8aN5czvtJGEOrhx+6g45qdFgOuB4HfJsjf6etuciRdMJeprDNmEsgDzYKMJgJi+
        LdT49zsGQ5imJX+b/JISi089A8fvlGVvqetteDZWc7oITZSFfhMFIU/wC+MZu9It8orJ+GeFGn5ZA5GJ
        JNRowf51S5vXA3q3LHszOCPbeQE2A2Whs5Lx9NylwBc6nkAsxj8p+Mu/XTEcUqc6baEiNaoqKPE1pMlC
        nHujBiBrbT2N6sSrKo0BB81AZ3kVrFESALlk10KNX2lGoYIkVFtF7FShOSXFpxDHinHujTyBdoW73qOw
        zlBFbEFrXBdpAVwynb3vTSGANYGRfu0ZhSWSUIe69zqahNPOqWGYieB9s+yN0sN5xvZes8jsQUG60igy
        T9fCJaazONAEAjgU+OX/wDD6bNVGWIRq6F/TOrMxCYNw7Y2aw+ZonTemGo8U0J2kqP6STW5es/FJKVUc
        OwHsCnX/1yyMV5wikBTVnMgVgTiNX2mAbAwE8Fpw9H9dhwSkKQJJUs2JfW9U83DFnHnqagIB3C1RiZGA
        DcXAlChFIEmqObHvzYHx/+o5aFIacFQwARQKQkhVBJKmmhO5IpAL41eOQcVUCPRSOAmsh6AIJE01J3JF
        IBfGv6Fz7YytFPitcBKYlqwIJE01J3JFoCcOjP9P3VhIjM1Ai4IJ4PLGeCUqAglUzYlyb1KMP+Z2YMkk
        MCtREUiaak7EexuRYvxRC4JQMY1EAhCpCCRNNSfivf2UYvxNUASSSAKLEhWBhKrmxLg37hHgVgVjTdAD
        XBL0wtpUOy5OEUioak5sexNl/E0SBX0v5esvVRFIompOhHsTZfyNIQAhJLDONKjEmSKQUNWcWPbGha1+
        xiGvTZsFv+zppW0UKMuIUwQSqpoT+t5EGn/jCMATCXyuKAUVpwgkTTUn8L2JNf5GEoBlUYixCnBoikDS
        VHMC3Zto428sATiQZM5+yXbJ5ddV8RGnCCRRNSegvXHhuyvjbzQBOCSBlwyiEGIUgYSq5kjc24fQjL/x
        BMAwNdgJCQDBnaEhi74Ob8YPD+AvBZ51R67brKUHsGLpATzIfCVnLL+Ss7TO6ypNgqbtjTICFw7Oj7Fq
        EghA7cXN1CAnPqsZA9goiAEMau7tLdM9ebTgcOvek6Pcm0PjN1ZNAgGoRZNXa0zfzCpmAXYrsgAzCut0
        KUTKlcRKiSDbFboEPU3dW43Gr6yaBAJQO0QbHgo4ZisM5FBYHYCqStFhRa48yr15MH4jtR8QQD1Rf1XM
        FBzsbQ4yYayWGzEYenqnKXujuNGFx3O0AgIwM/5XHl9aLgkYXkXaneXAFv3u73OCayaHeyenhj+6vQkw
        /t9Uk0AAigMkGGeusZAA5cRtZsHfzRxsm2DmcOZ6dGCxztsOnfyo9ibI+P+hmgQCUK/6EiUOmuCH5Rpz
        TNear7TOuOU65zf30wj3dlFTyS+77j8IIIy5AcZ3QQvRzE6xC45Ktl7qcIxxb9IwCgJQJ4CWpSikRCzQ
        3vYt1/nG1CV5Ra723Qj3Jg1tm4KspgYB1yI7APeZFJBfZKr0rIahMqnmSNybuMGzCAKaNWzsRXIAljsC
        nCeG6+xk88oWNRIX2S8S1cZfR7I3adiDIpA5Cdz3LOfEgf2clNuA4fSchznZEhOSnCiYmBvD3iThzLRj
        EQTwz4aU60APQNlsQJ1pM1dFGgPUIHOoe18vWGsh8L1JwnWZahIIQI8EngdIAttV4hm0rypDOa3qxe9n
        mqCrMflY2t4kGv8ImoF4SWAkIBJYVW0EISnt8xJD61Fcp7ekiedUp021/6/Jze1A9tYY44cegGwSuKLG
        lgmDffWSPl47Iy6xoNtNRoHTxcwd/IjUfHoMftNQpjdA4t4aZ/xQBPp/kdC10FTfFEcZNFc5NWM7dreE
        30QBxjPBxj/q+vxD0un/pcLRkoCg55wWCT1LwbDWQ5rV1xup8Y/V8U5AAGGQwAvDuocxEr8YtxGTIGNb
        pIq6h4ZrzHW42xd0/+/WXKcvZ2rwnk6EHMYPAig6GOMxkABFzI9zcsiTBu76ckcA70yHBKg8eLWisKWl
        uNZjCkAWPaP5CIx/vM4zD8PPJ4F2qCSQXhkqfv+a4vCMnhJBjxOVghQiEJUJv+dVsw+ofkOlpXu9aH/k
        yUg1/nbdxg8CiIwENApvvpa53iR5daJQuNNbcQXZ1Mx6DFrUAHSOY+uC8YMAbEhgQjAJTDIMvszVl9M0
        tv286j1SATZpCDrLmXxsmqVZCcj4J3ydcxh7BCRgMfr6U85+dY1tN5uOo5r7bYu9HWaERWxjMjMwfhBA
        1CRAhTE2cmdLtM9pi31+J5f/LlOF3RTtzfa5n5QEDUV6ciAAmSQwKZgEvjOs85VhjVXGbrvDCAVcrFO7
        IAC/JPAi8kMJNMz4QQAgAaDBxg8CMCOBKZAAEEtZN4zanARwqAGtwKbEswyDBgkADTV+EIA9CUzjcANV
        Q2Akn2EYMkgAaKjxgwD4SGAGhx3or5gGDQKImwRmceiB/pIx5yAAkAAA4wcBRE4CL2EEjcXL0M4rjBYk
        APBgLsSzCoN1RwJzMAoYPwgAJAADiRvzIZ9RGKp7EpiHkcD4QQAgARgMjB8E0GASeAWjiQavYjmXMM56
        SWABxhM8FmI6kzBMkEDsSOXF/oDxgwAkkcBrhsOYqhP9gIFXzy6goSK2a72O8SzCIP2RwBuLw7hBa9wD
        CagNLqE5CKZrvYn1HMIYwyOBvQ4d/h6QQPXUIppXsAfjBwFII4G3mgf7XsEcvwMY/i8cFY0sI4/pUGOt
        t7GfPxihHD2Ba4WD3aoY5nkA4y+eV0jPqUX/rmpK70wTzh4MUA4JDJVMsdmtOti0Rm+DSeBI5RllnlPR
        BKP0HQw15dzB+GSRQPoVX8p8oS4SLJZN8i043Icw/srn1E3P9iKzRvrse5p05mB4csngjsV/2yQSKL0a
        uX7WIABAKoE0gQSsjb/pwEOInwSOmIwtDYx9YVgnHdX9EcYPAgDCIYHU+J/T+O9zS+N/xLDOMYwfBACo
        k0DLggR+GX9mrVHD2YhpdP0hwzowfhAAYEgCxzbGb6F+fJLgAcM6MH4QAFCTJ3CVZ/wGZczp37vPtA6M
        HwQAMNQa7FcYW3o/H1acg9Cu6FvoqWsdAAQAqJFAGoTbLHHXBzTWGktwmbPOe80CJpZ1ABAAoG50aWR/
        mcpid8gdv2Owzj1SQF6lNe4b/h6WdQAQAAAAIAAAAEAAAACAAAAAAAEAAAACAAAADwEAQAAAADQR/wMn
        CaxafyR+DgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>PixelCircle</value>
  </data>
</root>